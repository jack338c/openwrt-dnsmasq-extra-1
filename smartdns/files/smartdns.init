#!/bin/sh /etc/rc.common

START=90
NAME=smartdns
USE_PROCD=1
EXTRA_COMMANDS="healthcheck"

CRON_FILE=/etc/crontabs/root

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_bool_by_type() {
	case "$(uci_get_by_type $1 $2)" in
	1 | on | true | yes | enabled) return 0 ;;
	esac
	return 1
}

start_instance() {
	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param command $@
	procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger $NAME
}

start_service() {
	uci_bool_by_type $NAME enable || exit 0
	add_cron

	mkdir -p /var/etc/ /var/log/

	port=$(uci_get_by_type $NAME port 7700)

	cat <<-EOF >"/var/etc/${NAME}.conf"
		bind 0.0.0.0:${port}
		bind-tcp 0.0.0.0:${port}
		cache-size 768
		cache-persist no

		speed-check-mode tcp:80,ping
		domain-rules /github.com/ -c tcp:443,tcp:22 -group bootstrap
		domain-rules /githubusercontent.com/ -c tcp:443
		domain-rules /github.map.fastly.net/ -c tcp:443
		domain-rules /github.global.ssl.fastly.net/ -c tcp:443
		domain-rules /s3.amazonaws.com/ -c tcp:443

		prefetch-domain $(uci_bool_by_type $NAME prefetch && echo yes || echo no)
		force-AAAA-SOA $(uci_bool_by_type $NAME ipv6 && echo no || echo yes)

		log-level info
		log-file /var/log/smartdns.log
		log-size 512K
		log-num 2

		$(
			for it in $(uci_get_by_type $NAME bootstrap); do
				# echo "server ${it} -group bootstrap -exclude-default-group"
				echo "server-tcp ${it} -group bootstrap -exclude-default-group"
				echo "server-tls ${it} -group bootstrap -exclude-default-group"
			done
		)

		$(
			for type in tls https; do
				for it in $(uci_get_by_type $NAME server_${type}); do
					it=$(echo ${it} | sed 's+.*//++g; s+/.*++g')
					echo ${it} | grep -q '[0-9]$' || echo "nameserver /${it}/bootstrap"
				done
			done
		)

		$(
			for type in tls https; do
				for it in $(uci_get_by_type $NAME server_${type}); do echo "server-${type} ${it} -tls-host-verify"; done
			done
		)

		$(
			for it in $(uci_get_by_type $NAME ignore_ip); do echo "ignore-ip ${it}"; done
		)

	EOF

	start_instance /usr/bin/$NAME -c "/var/etc/${NAME}.conf" -f

	uci_bool_by_type $NAME enable_cn && {
		cat <<-EOF >"/var/etc/${NAME}_cn.conf"
			bind 0.0.0.0:$((port + 1))
			bind-tcp 0.0.0.0:$((port + 1))
			cache-size 384
			cache-persist no

			speed-check-mode ping,tcp:80

			# prefetch-domain $(uci_bool_by_type $NAME prefetch && echo yes || echo no)
			force-AAAA-SOA $(uci_bool_by_type $NAME ipv6 && echo no || echo yes)
			prefetch-domain no
			serve-expired yes

			log-level info
			log-file /var/log/smartdns_cn.log
			log-size 512K
			log-num 2

			$(
				for it in $(uci_get_by_type $NAME bootstrap); do
					echo "server ${it} -group bootstrap -exclude-default-group"
					echo "server-tcp ${it} -group bootstrap -exclude-default-group"
				done
			)

			nameserver /doh.pub/bootstrap
			nameserver /dot.pub/bootstrap
			nameserver /dns.pub/bootstrap
			nameserver /doh.360.cn/bootstrap
			nameserver /dns.alidns.com/bootstrap

			server-tls dns.pub:853 -host-name dns.pub
			server-tls dot.pub:853 -host-name dot.pub
			server-tls 223.6.6.6:853 -host-name dns.alidns.com
			server-https https://doh.pub/dns-query -host-name doh.pub
			server-https https://doh.360.cn/dns-query -host-name doh.360.cn
			server-https https://223.5.5.5/dns-query -host-name dns.alidns.com
		EOF

		start_instance /usr/bin/$NAME -c "/var/etc/${NAME}_cn.conf" -f
	}
}

stop_service() {
	del_cron
	rm -f "/var/etc/${NAME}*.conf"
}

add_cron() {
	sed -i "/${NAME}/d" $CRON_FILE
	echo "*    *    * * * /etc/init.d/${NAME} healthcheck" >>$CRON_FILE
	/etc/init.d/cron restart
}

del_cron() {
	sed -i "/${NAME}/d" $CRON_FILE
	/etc/init.d/cron restart
}

healthcheck() {
	# init check
	grep 'pending' /var/log/${NAME}*.log | grep -q 'failed' && {
		rm -f /var/log/${NAME}*
		/etc/init.d/${NAME} restart
		exit 0
	}

	# smartdns check
	/usr/bin/pgrep -f ${NAME}.conf >/dev/null || {
		/etc/init.d/${NAME} restart
		exit 0
	}

	# smartdns_cn check
	uci_bool_by_type $NAME enable_cn && {
		/usr/bin/pgrep -f ${NAME}_cn.conf >/dev/null || {
			/etc/init.d/${NAME} restart
			exit 0
		}
	}
}
