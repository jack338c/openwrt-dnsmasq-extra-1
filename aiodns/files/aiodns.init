#!/bin/sh /etc/rc.common

START=65
NAME=aiodns
USE_PROCD=1

CRON_FILE=/etc/crontabs/root

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_bool_by_type() {
	case "$(uci_get_by_type $1 $2)" in
		1|on|true|yes|enabled) return 0;;
	esac
	return 1
}

start_instance() {
	procd_open_instance
	procd_set_param respawn
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param command $@
	procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger $NAME
}

start_service() {
	uci_bool_by_type $NAME enable || exit 0
	sysctl -w net.core.rmem_max=2500000 >/dev/null 2>&1
	add_cron

	local port=$(uci_get_by_type $NAME port 7200)
	local args="-A -l=:${port}"
	args="$(uci_bool_by_type $NAME block_ipv6 && echo '-R') ${args}"
	args="$(uci_bool_by_type $NAME fastest_addr && echo '-F') ${args}"

	local special=$(for it in $(uci_get_by_type $NAME special); do echo -n "-U=$it "; done)
	local upstream=$(for it in $(uci_get_by_type $NAME upstream); do echo -n "-u=$it "; done)
	local fallback=$(for it in $(uci_get_by_type $NAME fallback); do echo -n "-f=$it "; done)
	local bootstrap=$(for it in $(uci_get_by_type $NAME bootstrap); do echo -n "-b=$it "; done)
	local extralist=$(for it in $(uci_get_by_type $NAME extralist); do echo -n "-L=$it "; done)
	local bypasslist=$(for it in $(uci_get_by_type $NAME bypasslist); do echo -n "-B=$it "; done)

	start_instance /usr/bin/$NAME ${args} ${upstream} ${special} ${fallback} ${bootstrap} ${extralist} ${bypasslist}
}

stop_service() {
	rm -rf /var/$NAME
	del_cron
}

add_cron() {
	sed -i "/${NAME}/d" $CRON_FILE
	echo "0    2    * * * /etc/init.d/${NAME} restart" >>$CRON_FILE
	echo "*    *    * * * /usr/bin/pgrep -f '/usr/bin/aiodns' || /etc/init.d/${NAME} restart" >>$CRON_FILE
	/etc/init.d/cron restart
}

del_cron() {
	sed -i "/${NAME}/d" $CRON_FILE
	/etc/init.d/cron restart
}
